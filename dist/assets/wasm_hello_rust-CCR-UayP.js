let n,s=null;function c(){return(s===null||s.buffer.detached===!0||s.buffer.detached===void 0&&s.buffer!==n.memory.buffer)&&(s=new DataView(n.memory.buffer)),s}const o=typeof TextDecoder<"u"?new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0}):{decode:()=>{throw Error("TextDecoder not available")}};typeof TextDecoder<"u"&&o.decode();let a=null;function u(){return(a===null||a.byteLength===0)&&(a=new Uint8Array(n.memory.buffer)),a}function l(e,t){return e=e>>>0,o.decode(u().subarray(e,e+t))}function g(){let e,t;try{const f=n.__wbindgen_add_to_stack_pointer(-16);n.greet(f);var i=c().getInt32(f+4*0,!0),r=c().getInt32(f+4*1,!0);return e=i,t=r,l(i,r)}finally{n.__wbindgen_add_to_stack_pointer(16),n.__wbindgen_free(e,t,1)}}async function w(e,t){if(typeof Response=="function"&&e instanceof Response){if(typeof WebAssembly.instantiateStreaming=="function")try{return await WebAssembly.instantiateStreaming(e,t)}catch(r){if(e.headers.get("Content-Type")!="application/wasm")console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",r);else throw r}const i=await e.arrayBuffer();return await WebAssembly.instantiate(i,t)}else{const i=await WebAssembly.instantiate(e,t);return i instanceof WebAssembly.Instance?{instance:i,module:e}:i}}function b(){const e={};return e.wbg={},e}function y(e,t){return n=e.exports,d.__wbindgen_wasm_module=t,s=null,a=null,n}function p(e){if(n!==void 0)return n;typeof e<"u"&&(Object.getPrototypeOf(e)===Object.prototype?{module:e}=e:console.warn("using deprecated parameters for `initSync()`; pass a single object instead"));const t=b();e instanceof WebAssembly.Module||(e=new WebAssembly.Module(e));const i=new WebAssembly.Instance(e,t);return y(i,e)}async function d(e){if(n!==void 0)return n;typeof e<"u"&&(Object.getPrototypeOf(e)===Object.prototype?{module_or_path:e}=e:console.warn("using deprecated parameters for the initialization function; pass a single object instead")),typeof e>"u"&&(e=new URL("/assets/wasm_hello_rust_bg-BVllmLri.wasm",import.meta.url));const t=b();(typeof e=="string"||typeof Request=="function"&&e instanceof Request||typeof URL=="function"&&e instanceof URL)&&(e=fetch(e));const{instance:i,module:r}=await w(await e,t);return y(i,r)}export{d as default,g as greet,p as initSync};
